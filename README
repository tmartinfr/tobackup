
==========================================
tobackup - A simple unix-style backup tool
==========================================


Description
===========
tobackup is a short script written in sh(1) for performing local or remote
incremental backup over SSH. It aims to keep simple and easy to understand by
following Unix philosophy : use cron(8) for backup scheduling, ssh(1) for
remote data transfer, and rsync(1) for its capability to performs incremental
copy of directories.


Configuration
=============
tobackup is based on a pull model : the backup server is the host which fetch
and store backup, and the backup client is the host which is backuped.

Launch the program with no parameters to get help.
In addition, the following steps must be performed.

Config file on backup server
----------------------------
Default config file on backup server is /usr/local/etc/backuprc. Overwrite this
with the -f flag. An example can be find in the backuprc.sample file.
Example :

# Directory where backup are stored
BACKUP_DIR=/some/path

# SSH key for remote backup
SSH_KEY=/some/path/backup.key

## Configuration for the host label "HOST1"
# Host name
HOST1_HOST="host1.example.com"
# Host port
HOST1_PORT="221"
# rsync modules to backup
HOST1_BACKUP_SRC=":root :usr :var"

Configure SSH on backup client
------------------------------
Add a line like this in the .ssh/authorized_keys file of the remote user who
will be used for transfer, followed by your SSH backup key. If root, you can
specify "forced-commands-only" for the PermitRootLogin directive of sshd.

Example (backup server has IP address 1.2.3.4) :

from="1.2.3.4",command="rsync --daemon --server --config\ 
      /usr/local/etc/rsyncd-backup.conf .",no-port-forwarding,\ 
      no-X11-forwarding,no-agent-forwarding,no-pty 

Configure rsyncd on backup client
---------------------------------
Add the directories to backup in /usr/local/etc/rsyncd-backup.conf. See
rsyncd-backup(5) man page. Example :

[root]
path=/
read only=yes
use chroot=no
uid=root
exclude = /dev

[usr]
path=/usr
read only=yes
use chroot=no
uid=root
exclude = /ports

Scheduling backup on backup server
----------------------------------
Scheduling is done using cron(8). Example :

35      23      *       *       1-6     backup rsync -h host1 daily 6
35      23      *       *       0       backup rsync -h host1 weekly 3
50      23      1       *       *       backup rsync -h host1 monthly 6

You can add the -v switch to get a full listing of file transfers.


Author
======
Thomas Martin <git-tobackup@tmartin.fr>

